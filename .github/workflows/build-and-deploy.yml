name: Build and Deploy Microservice

on:
  repository_dispatch:
    types: [microservice-updated]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: ghcr.io/krishnachaitanya018/${{ github.event.client_payload.service }}:${{ github.event.client_payload.commit }}

    steps:
      - name: Checkout orchestration repo
        uses: actions/checkout@v4

      - name: Log incoming payload
        run: |
          echo "Service: ${{ github.event.client_payload.service }}"
          echo "Commit: ${{ github.event.client_payload.commit }}"
          echo "Repo: ${{ github.event.client_payload.repo }}"

      - name: Clone microservice repo
        run: |
          git clone https://github.com/${{ github.event.client_payload.repo }} service-code
          cd service-code
          git checkout ${{ github.event.client_payload.commit }}
          echo "Cloned and checked out ${{ github.event.client_payload.service }}"

      - name: Build Docker image
        run: |
          cd service-code
          echo "üèóÔ∏è Building Docker image: $IMAGE_TAG"
          docker build -t $IMAGE_TAG .

      - name: Push Docker image
        run: |
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u krishnachaitanya018 --password-stdin
          echo "Pushing Docker image: $IMAGE_TAG"
          docker push $IMAGE_TAG

      # Optional deployment step ‚Äî only needed if you have Kubernetes
      - name: Deploy to Kubernetes
        run: |
          echo "Deploying ${{ github.event.client_payload.service }} to Kubernetes..."
          helm upgrade --install ${{ github.event.client_payload.service }} ./helm/${{ github.event.client_payload.service }} \
            --set image.repository=ghcr.io/krishnachaitanya018/${{ github.event.client_payload.service }} \
            --set image.tag=${{ github.event.client_payload.commit }} \
            --kubeconfig "${{ secrets.KUBE_CONFIG }}"
