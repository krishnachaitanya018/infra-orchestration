name: Build and Store Microservice Image — ${{ github.event.client_payload.service }}

on:
  repository_dispatch:
    types: [microservice-updated]

jobs:
  build-and-store:
    name: Build and Store Docker Image Artifact
    runs-on: self-hosted

    env:
      REGISTRY: ghcr.io/krishnachaitanya018
      IMAGE_TAG: ${{ github.event.client_payload.commit }}
      SERVICE_NAME: ${{ github.event.client_payload.service }}
      REPO_URL: ${{ github.event.client_payload.repo }}

    steps:
      # -----------------------------------------------
      # 1️⃣ Display Trigger Info
      # -----------------------------------------------
      - name: Display Workflow Trigger Info
        run: |
          echo "Workflow triggered by microservice update!"
          echo "Service: $SERVICE_NAME"
          echo "Commit:  $IMAGE_TAG"
          echo "Repo:    $REPO_URL"

      # -----------------------------------------------
      # 2️⃣ Generate a summary card for GitHub UI
      # -----------------------------------------------
      - name: Generate Workflow Summary
        run: |
          echo "###Microservice Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Service:** $SERVICE_NAME" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit SHA:** $IMAGE_TAG" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered from:** $REPO_URL" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry:** $REGISTRY" >> $GITHUB_STEP_SUMMARY

      # -----------------------------------------------
      # 3️⃣ Checkout Orchestration Repo
      # -----------------------------------------------
      - name: Checkout orchestration repo
        uses: actions/checkout@v4

      # -----------------------------------------------
      # 4️⃣ Clone Microservice Repo
      # -----------------------------------------------
      - name: Clone microservice repo
        run: |
          echo "Cloning $REPO_URL..."
          git clone https://github.com/$REPO_URL service-code
          cd service-code
          git checkout $IMAGE_TAG
          echo "Checked out commit: $IMAGE_TAG"

      # -----------------------------------------------
      # 5️⃣ Build Docker Image
      # -----------------------------------------------
      - name: Build Docker image
        run: |
          cd service-code
          echo "Building Docker image..."
          docker build -t $REGISTRY/$SERVICE_NAME:$IMAGE_TAG .
          echo "Docker image built successfully!"
          docker images | grep $SERVICE_NAME

      # -----------------------------------------------
      # 6️⃣ Save Docker Image as Artifact
      # -----------------------------------------------
      - name: Save Docker image as artifact
        run: |
          mkdir -p artifacts
          docker save -o artifacts/${SERVICE_NAME}_${IMAGE_TAG}.tar $REGISTRY/$SERVICE_NAME:$IMAGE_TAG
          echo "Docker image saved to artifacts folder."
          ls -lh artifacts/

      # -----------------------------------------------
      # 7️⃣ Upload Artifact to GitHub
      # -----------------------------------------------
      - name: Upload image artifact to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-${{ env.SERVICE_NAME }}
          path: artifacts/${{ env.SERVICE_NAME }}_${{ env.IMAGE_TAG }}.tar
